//Complete Code:

// include the library code for LCD display:
#include <LiquidCrystal.h>

// initialize the library with the numbers of the interface pins
LiquidCrystal lcd(12, 11, 5, 4, 3, 2);

// initialising the pin for distance sensor
const int pingPin = A3;

//keeping lobal variables for values
long duration=0, inches=0;
int ledvalue=0;

void setup() {
  //initialising pins for buzzer and 7 segment 
  for(int i=0;i<=13;i++){
    pinMode(i, OUTPUT);
  }
  
  //LED's setup
  pinMode(A0, OUTPUT);
  pinMode(A1, OUTPUT);
  pinMode(A2, OUTPUT);
  
  // set up the LCD's number of columns and rows:
  lcd.begin(16, 2);
  // Clearing LCD contents in beginning.
  lcd.clear();
}

void loop() {
// The PING))) is triggered by a HIGH pulse of 2 or more microseconds.
// Give a short LOW pulse beforehand to ensure a clean HIGH pulse:
pinMode(pingPin, OUTPUT);
digitalWrite(pingPin, LOW);
delayMicroseconds(2);
digitalWrite(pingPin, HIGH);
delayMicroseconds(5);
digitalWrite(pingPin, LOW);

// The same pin is used to read the signal from the PING))): a HIGH pulse
// whose duration is the time (in microseconds) from the sending of the ping
// to the reception of its echo off of an object.
pinMode(pingPin, INPUT);
duration = pulseIn(pingPin, HIGH);    
// convert the time into a distance
  inches = microsecondsToInches(duration);
 
  //printing distance in serial monitor
  Serial.print(inches);
  Serial.print("in");
  Serial.println();
  
  //delay of 0.1s
  delay(100);
  
  //maintainin consistency of power among all 7 segments of SSD
  digitalWrite(1, HIGH);
  digitalWrite(9, HIGH);
  digitalWrite(10, HIGH);
  digitalWrite(13, HIGH);
  digitalWrite(6, HIGH);
  digitalWrite(7, HIGH);
  digitalWrite(8, HIGH);
  delay(1000);
  
// For green LED
ledvalue=3;
digitalWrite(A0, HIGH);

//buzzer turns on for 1s at change of light
tone(0, 190, 1000);

//which segments to be turned on for count down of green light
display5();
display4();
display3();
display2();
display1();
display0();

digitalWrite(A0, LOW);

// For orange LED
ledvalue=1;
digitalWrite(A1, HIGH);

//buzzer turns on for 1s at change of light
tone(0, 190, 1000);

 //which segments to be turned on for count down of orange 
display2();
display1();
display0();
digitalWrite(A1, LOW);

  // For the red LED
  ledvalue=2;
  digitalWrite(A2, HIGH);
  
   //buzzer turns on for 1s at change of light
  tone(0, 170, 1000);
  
 //which segments to be turned on for count down of red 
  display9();
  display8();
  display7();
  display6();
  display5();
  display4();
  display3();
  display2();
  display1();
  display0();
  
  digitalWrite(A2, LOW); 
}
long microsecondsToInches(long microseconds) {
  long inches= microseconds / 74/2;
  return inches;
}
bool SafeDist(long inch, long time){
	long Safespeed=20; //in inches/sec
  
  //if either red or yellow light 
  if(time==-1){
  	return false;
  }
  else if(ledvalue!=3){
  	return false;
  }
  long SafeTime = inch/Safespeed;
  // if the time left for countdown is < time req to cross 
  if(time<SafeTime){
  	return false;
  }
  //if dist is safe
  else{
  	return true;
  }    
}
//function to display on lcd
void lcdDisplay(int countDown){
  bool go= SafeDist(inches,countDown);
  //if yellow light
  if(ledvalue==1){
  	  lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("WAIT!");
      lcd.setCursor(0,1);
      lcd.print("Be Alert today!");
  }
  //if red light
  else if(ledvalue==2){
  	  lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("STOP!");
      lcd.setCursor(0,1);
      lcd.print("Save fuel!");
  }
  //if green light and dist is safe  
  else if(go){
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("Safe dist!");
      lcd.setCursor(0,1);
      lcd.print("Go Ahead!");
    }
  //if reen light but dist is not safe
  else{
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("Not a safe dist!");
      lcd.setCursor(0,1);
      lcd.print("Be Alert Today!");
    }
}
void display1(){
  // to display 1
  //Also calling lcdDisplay function with countdown as arguments
  lcdDisplay(1); 
  digitalWrite(9,LOW);
  digitalWrite(10,LOW);
  delay(1000);
  digitalWrite(9,HIGH);
  digitalWrite(10,HIGH);  
  delay(1000);
}
void display2(){
 // to display 2
 //Also calling lcdDisplay function with countdown 
  lcdDisplay(2);
  digitalWrite(1,LOW); 
  digitalWrite(9,LOW); 
  digitalWrite(8,LOW); 
  digitalWrite(6,LOW); 
  digitalWrite(13,LOW);
  delay(1000);  
  digitalWrite(1,HIGH);
  digitalWrite(9,HIGH);
  digitalWrite(8,HIGH);
  digitalWrite(6,HIGH);
  digitalWrite(13,HIGH);
  delay(1000);
}
void display3(){
  // to display 3
  //Also calling lcdDisplay function with countdown 
  lcdDisplay(3);
  digitalWrite(1,LOW); 
  digitalWrite(9,LOW); 
  digitalWrite(8,LOW); 
  digitalWrite(10,LOW); 
  digitalWrite(13,LOW); 
  delay(1000);  
  digitalWrite(1,HIGH);
  digitalWrite(9,HIGH);
  digitalWrite(8,HIGH);
  digitalWrite(10,HIGH);
  digitalWrite(13,HIGH);
  delay(1000);
}
void display4(){
  // to display 4
  //Also calling lcdDisplay function with countdown as 
  lcdDisplay(4);
  digitalWrite(7,LOW); 
  digitalWrite(8,LOW); 
  digitalWrite(9,LOW); 
  digitalWrite(10,LOW); 
  delay(1000);  
  digitalWrite(7,HIGH);
  digitalWrite(8,HIGH);
  digitalWrite(9,HIGH);
  digitalWrite(10,HIGH);
  delay(1000);
}
void display5(){
  // to display 5
  //Also calling lcdDisplay function with countdown 
  lcdDisplay(5);
  digitalWrite(1,LOW); 
  digitalWrite(7,LOW); 
  digitalWrite(8,LOW); 
  digitalWrite(10,LOW); 
  digitalWrite(13,LOW);   
  delay(1000);  
  digitalWrite(1,HIGH);
  digitalWrite(7,HIGH);
  digitalWrite(8,HIGH);
  digitalWrite(10,HIGH);
  digitalWrite(13,HIGH);
  delay(1000);
}
void display6(){
  // to display 6
  //Also calling lcdDisplay function with countdown 
  lcdDisplay(6);
  digitalWrite(1,LOW); 
  digitalWrite(7,LOW); 
  digitalWrite(8,LOW); 
  digitalWrite(10,LOW); 
  digitalWrite(13,LOW);
  digitalWrite(6,LOW); 
  delay(1000);  
  digitalWrite(1,HIGH);
  digitalWrite(7,HIGH);
  digitalWrite(8,HIGH);
  digitalWrite(10,HIGH);
  digitalWrite(13,HIGH);
  digitalWrite(6,HIGH);
  delay(1000);
}
void display7(){
  // to display 7
  //Also calling lcdDisplay function with countdown 
  lcdDisplay(7);
  digitalWrite(1,LOW); 
  digitalWrite(9,LOW); 
  digitalWrite(10,LOW); 
  delay(1000);  
  digitalWrite(1,HIGH);
  digitalWrite(9,HIGH);
  digitalWrite(10,HIGH);
  delay(1000);
}
void display8(){
    // to display 8
  //Also calling lcdDisplay function with countdown   lcdDisplay(8);
  digitalWrite(1,LOW); 
  digitalWrite(7,LOW); 
  digitalWrite(9,LOW); 
  digitalWrite(10,LOW); 
  digitalWrite(13,LOW);
  digitalWrite(6,LOW); 
  digitalWrite(8,LOW);
  
  delay(1000);
  
  digitalWrite(1,HIGH);
  digitalWrite(7,HIGH);
  digitalWrite(9,HIGH);
  digitalWrite(10,HIGH);
  digitalWrite(13,HIGH);
  digitalWrite(6,HIGH);
  digitalWrite(8,HIGH);
  
  delay(1000);
}

void display9(){ 
  // to display 9
  //Also calling lcdDisplay fucntion with countdown
  lcdDisplay(9);
  digitalWrite(1,LOW); 
  digitalWrite(7,LOW); 
  digitalWrite(9,LOW); 
  digitalWrite(10,LOW); 
  digitalWrite(13,LOW);
  digitalWrite(8,LOW); 
  
  delay(1000);

digitalWrite(1,HIGH);
digitalWrite(7,HIGH);
digitalWrite(9,HIGH);
digitalWrite(10,HIGH);
digitalWrite(13,HIGH);
digitalWrite(8,HIGH);
delay(1000);
}

void display0(){
  //to display 0
  //Also calling lcdDisplay fucntion with countdown as arguments
  lcdDisplay(0);
  
  digitalWrite(1,LOW); 
  digitalWrite(7,LOW); 
  digitalWrite(9,LOW); 
  digitalWrite(10,LOW); 
  digitalWrite(13,LOW);
  digitalWrite(6,LOW); 
  
  delay(1000);
  
  digitalWrite(1,HIGH);
  digitalWrite(7,HIGH);
  digitalWrite(9,HIGH);
  digitalWrite(10,HIGH);
  digitalWrite(13,HIGH);
  digitalWrite(6,HIGH);
  
  delay(1000);
}
